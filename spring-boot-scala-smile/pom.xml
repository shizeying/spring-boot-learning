<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.example</groupId>
		<artifactId>learning</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>spring-boot-scala-smile</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring-boot-scala-smile</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>1.8</java.version>
	</properties>
	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.scalanlp/breeze-viz -->
		<dependency>
			<groupId>org.scalanlp</groupId>
			<artifactId>breeze-viz_${scala.version}</artifactId>
			<version>${breeze.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.scalanlp</groupId>
			<artifactId>breeze-natives_${scala.version}</artifactId>
			<version>${breeze.version}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.scalanlp/breeze -->
		<dependency>
			<groupId>org.scalanlp</groupId>
			<artifactId>breeze_${scala.version}</artifactId>
			<version>${breeze.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.typelevel</groupId>
			<artifactId>cats-effect_${scala.version}</artifactId>
			<version>${cats.verison}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.typelevel/cats-free -->
		<dependency>
			<groupId>org.typelevel</groupId>
			<artifactId>cats-free_${scala.version}</artifactId>
			<version>${cats.verison}</version>
		</dependency>
		
		
		<!-- https://mvnrepository.com/artifact/org.typelevel/cats-core -->
		<dependency>
			<groupId>org.typelevel</groupId>
			<artifactId>cats-core_${scala.version}</artifactId>
			<version>${cats.verison}</version>
		</dependency>
		
		
		<dependency>
			<groupId>com.github.haifengl</groupId>
			<artifactId>smile-scala_${scala.version}</artifactId>
			<version>${smile-scala.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.haifengl</groupId>
			<artifactId>smile-core</artifactId>
			<version>${smile-scala.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.github.haifengl/smile-mkl -->
		<dependency>
			<groupId>com.github.haifengl</groupId>
			<artifactId>smile-mkl</artifactId>
			<version>${smile-scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>javacpp</artifactId>
			<version>${javacpp.verison}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.bytedeco/openblas -->
		<dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>openblas</artifactId>
			<version>${openblas.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.bytedeco/arpack-ng -->
		<dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>arpack-ng</artifactId>
			<version>${arpack-ng.verison}</version>
		</dependency>
		
		
		
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-reflect</artifactId>
			<version>${scala.compat.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.compat.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	
	<build>
		<plugins>
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.4.6</version>
				<executions>
					<execution>
						<id>compile-scala</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>test-compile-scala</id>
						<phase>test-compile</phase>
						<goals>
							<goal>add-source</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!--<recompileMode>incremental</recompileMode>-->
					<!--<compileOrder>Mixed</compileOrder>-->
					<scalaVersion>${scala.compat.version}</scalaVersion>
					<args>
						<arg>-unchecked</arg>
						<arg>-deprecation</arg>
						<arg>-feature</arg>
					</args>
					<jvmArgs>
						<jvmArg>-Xms64m</jvmArg>
						<jvmArg>-Xmx1024m</jvmArg>
					</jvmArgs>
				</configuration>
			</plugin>
			<!-- java编译插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<!-- 插件的版本 -->
				<version>${maven-compiler-plugin.version}</version>
				<!-- 编译级别 强制为jdk1.8-->
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<!-- 编码格式 -->
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				
				</executions>
			
			</plugin>
			
			<!-- 解决资源文件的编码问题 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				
				<configuration>
					<encoding>UTF-8</encoding>
					<delimiters>
						<delimiter>@</delimiter>
					</delimiters>
					<useDefaultDelimiters>false</useDefaultDelimiters>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<!--suppress UnresolvedMavenProperty -->
							<Build-Timestamp>${timestamp}</Build-Timestamp>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.4</version>
				
				<configuration>
					<timestampFormat>yyyy-MM-dd HH:mm:ss</timestampFormat>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>create-timestamp</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
